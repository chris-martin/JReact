<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="Integration" duration-ms="1157" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:04Z">
    <groups>
    </groups>
    <test name="Pipe limitations" duration-ms="67" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
      <class name="org.jreact.core.impl.PipeLimitTimesTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limit0TestDependents()" name="limit0TestDependents" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limit0TestLooping()" name="limit0TestLooping" duration-ms="12" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limit1TestDependents()" name="limit1TestDependents" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limit1TestLooping()" name="limit1TestLooping" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limit1TestThreeDependents()" name="limit1TestThreeDependents" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limit2TestLooping()" name="limit2TestLooping" duration-ms="3" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
      <class name="org.jreact.core.impl.PipeLimitStreamTest">
        <test-method status="PASS" signature="disposePut()" name="disposePut" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="putDisposePut()" name="putDisposePut" duration-ms="13" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
      <class name="org.jreact.core.impl.RelayingPipeLimitedTimesTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="14" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="doesGetDisposed()" name="doesGetDisposed" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="initiallyNotDisposed()" name="initiallyNotDisposed" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="stillNotDisposed()" name="stillNotDisposed" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
    </test>
    <test name="Constant basics" duration-ms="387" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
      <class name="org.jreact.core.impl.ConstantEqualsValueTest">
        <test-method status="PASS" signature="equalsConstantA()" name="equalsConstantA" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="equalsMockValueA()" name="equalsMockValueA" duration-ms="2" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="equalsMockValueB()" name="equalsMockValueB" duration-ms="2" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="equalsNull()" name="equalsNull" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="equalsSelf()" name="equalsSelf" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
      </class>
      <class name="org.jreact.core.impl.ConstantGetTest">
        <test-method status="PASS" signature="get()" name="get" duration-ms="2" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
      </class>
      <class name="org.jreact.core.impl.ConstantHashCodeTest">
        <test-method status="PASS" signature="character()" name="character" duration-ms="12" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="object()" name="object" duration-ms="12" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
      </class>
      <class name="org.jreact.core.impl.ConstantEqualsObjectTest">
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="21" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="equalsA()" name="equalsA" duration-ms="8" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="equalsConstantA()" name="equalsConstantA" duration-ms="1" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="equalsMockValueA()" name="equalsMockValueA" duration-ms="271" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="equalsMockValueB()" name="equalsMockValueB" duration-ms="2" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="equalsNull()" name="equalsNull" duration-ms="1" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
        <test-method status="PASS" signature="equalsSelf()" name="equalsSelf" duration-ms="0" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:03Z">
        </test-method>
      </class>
    </test>
    <test name="Variable basics" duration-ms="40" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
      <class name="org.jreact.core.impl.VariableGetAndPutTest">
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="32" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="get()" name="get" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="setDifferentValue()" name="setDifferentValue" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="setMultiple()" name="setMultiple" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="setSameValue()" name="setSameValue" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="setThenGet()" name="setThenGet" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
    </test>
    <test name="Pipe looping" duration-ms="80" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
      <class name="org.jreact.core.impl.PipeDependentSinksTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="11" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="dependentValueSink1()" name="dependentValueSink1" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="dependentValueSink2()" name="dependentValueSink2" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
      <class name="org.jreact.core.impl.PipeDependentEffectsTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="dependentEffect1()" name="dependentEffect1" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="dependentEffect2()" name="dependentEffect2" duration-ms="60" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
    </test>
    <test name="Variable looping" duration-ms="27" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
      <class name="org.jreact.core.impl.VariableChangesTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="loop()" name="loop" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="loopThenSet()" name="loopThenSet" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="loopThenSetSame()" name="loopThenSetSame" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="setThenLoop1()" name="setThenLoop1" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="setThenLoop2()" name="setThenLoop2" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
      <class name="org.jreact.core.impl.VariableLoopTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="loop()" name="loop" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="loopThenSet()" name="loopThenSet" duration-ms="8" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="loopThenSetSame()" name="loopThenSetSame" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="setThenLoop()" name="setThenLoop" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
    </test>
    <test name="Variable transformations" duration-ms="31" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
      <class name="org.jreact.core.impl.VariableMapTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="putAbc()" name="putAbc" duration-ms="8" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="putDef()" name="putDef" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="putDefXyzzy()" name="putDefXyzzy" duration-ms="4" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="3" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="putNothing()" name="putNothing" duration-ms="5" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
    </test>
    <test name="Constant transformations" duration-ms="123" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
      <class name="org.jreact.core.impl.ConstantMapTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="114" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="beLazy()" name="beLazy" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="callExactlyOnce()" name="callExactlyOnce" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="callOnce()" name="callOnce" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="get()" name="get" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
    </test>
    <test name="Constant limitations" duration-ms="172" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:04Z">
      <class name="org.jreact.core.impl.ConstantLimitTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="47" started-at="2010-08-13T20:09:03Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="22" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limit()" name="limit" duration-ms="20" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limitDisposeLoop()" name="limitDisposeLoop" duration-ms="22" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="3" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="FAIL" signature="limitLimit2Dispose1Loop()" name="limitLimit2Dispose1Loop" duration-ms="18" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
          <exception class="org.mockito.exceptions.verification.NeverWantedButInvoked">
            <message>
              <![CDATA[
effect.e('a');
Never wanted here:
-> at org.jreact.core.impl.ConstantLimitTest.limitLimit2Dispose1Loop(ConstantLimitTest.java:134)
But invoked here:
-> at org.jreact.core.impl.ConstantImpl.loop(ConstantImpl.java:25)
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.mockito.exceptions.verification.NeverWantedButInvoked: 
effect.e('a');
Never wanted here:
-> at org.jreact.core.impl.ConstantLimitTest.limitLimit2Dispose1Loop(ConstantLimitTest.java:134)
But invoked here:
-> at org.jreact.core.impl.ConstantImpl.loop(ConstantImpl.java:25)

	at org.jreact.core.impl.ConstantLimitTest.limitLimit2Dispose1Loop(ConstantLimitTest.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:643)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:559)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:723)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1027)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1030)
	at org.testng.TestRunner.privateRun(TestRunner.java:709)
	at org.testng.TestRunner.run(TestRunner.java:579)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:331)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:326)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:288)
	at org.testng.SuiteRunner.run(SuiteRunner.java:193)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:910)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="limitLimit2Dispose2Loop()" name="limitLimit2Dispose2Loop" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limitLimit2Loop()" name="limitLimit2Loop" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limitLimitDisposeLoop()" name="limitLimitDisposeLoop" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limitLimitLoop()" name="limitLimitLoop" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limitLoop()" name="limitLoop" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
    </test>
    <test name="Pipe transformations" duration-ms="65" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
      <class name="org.jreact.core.impl.PipeMapTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="putAbc()" name="putAbc" duration-ms="48" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="3" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="putAbcAbc()" name="putAbcAbc" duration-ms="3" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="putAbcDef()" name="putAbcDef" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="putDefXyzzy()" name="putDefXyzzy" duration-ms="3" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
    </test>
    <test name="Pipe basics" duration-ms="36" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
      <class name="org.jreact.core.impl.PipePutTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="loopThenPutA()" name="loopThenPutA" duration-ms="7" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="loopThenPutAAA()" name="loopThenPutAAA" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="loopThenPutABAA()" name="loopThenPutABAA" duration-ms="3" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="put()" name="put" duration-ms="9" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="putThenLoop()" name="putThenLoop" duration-ms="11" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
    </test>
    <test name="Variable limitations" duration-ms="43" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
      <class name="org.jreact.core.impl.VariableLimitTest">
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="disposeLoop()" name="disposeLoop" duration-ms="9" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="disposeLoopPut()" name="disposeLoopPut" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="disposePutLoopPut()" name="disposePutLoopPut" duration-ms="3" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="FAIL" signature="limitLimit2Dispose1Loop()" name="limitLimit2Dispose1Loop" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
          <exception class="org.mockito.exceptions.verification.NeverWantedButInvoked">
            <message>
              <![CDATA[
effect.e('a');
Never wanted here:
-> at org.jreact.core.impl.VariableLimitTest.limitLimit2Dispose1Loop(VariableLimitTest.java:191)
But invoked here:
-> at org.jreact.core.impl.SignalImpl.loop(SignalImpl.java:20)
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.mockito.exceptions.verification.NeverWantedButInvoked: 
effect.e('a');
Never wanted here:
-> at org.jreact.core.impl.VariableLimitTest.limitLimit2Dispose1Loop(VariableLimitTest.java:191)
But invoked here:
-> at org.jreact.core.impl.SignalImpl.loop(SignalImpl.java:20)

	at org.jreact.core.impl.VariableLimitTest.limitLimit2Dispose1Loop(VariableLimitTest.java:191)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:643)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:559)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:723)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1027)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1030)
	at org.testng.TestRunner.privateRun(TestRunner.java:709)
	at org.testng.TestRunner.run(TestRunner.java:579)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:331)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:326)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:288)
	at org.testng.SuiteRunner.run(SuiteRunner.java:193)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:910)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limitLimit2Dispose2Loop()" name="limitLimit2Dispose2Loop" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limitLimit2Loop()" name="limitLimit2Loop" duration-ms="3" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="FAIL" signature="limitLimitDisposeLoop()" name="limitLimitDisposeLoop" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at org.jreact.core.impl.StreamImpl.removeValueSink(StreamImpl.java:87)
	at org.jreact.core.impl.RelayingPipe.dispose(RelayingPipe.java:20)
	at org.jreact.core.impl.StreamImpl$1.e(StreamImpl.java:137)
	at org.jreact.core.impl.StreamImpl.propagateToEffects(StreamImpl.java:69)
	at org.jreact.core.impl.StreamImpl.propagate(StreamImpl.java:58)
	at org.jreact.core.impl.PipeImpl.put(PipeImpl.java:22)
	at org.jreact.core.impl.RelayingPipeLimitedTimes.put(RelayingPipeLimitedTimes.java:36)
	at org.jreact.core.impl.StreamImpl.propagateToPipes(StreamImpl.java:79)
	at org.jreact.core.impl.StreamImpl.propagate(StreamImpl.java:45)
	at org.jreact.core.impl.PipeImpl.put(PipeImpl.java:14)
	at org.jreact.core.impl.VariableLimitTest.limitLimitDisposeLoop(VariableLimitTest.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:643)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:559)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:723)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1027)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1030)
	at org.testng.TestRunner.privateRun(TestRunner.java:709)
	at org.testng.TestRunner.run(TestRunner.java:579)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:331)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:326)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:288)
	at org.testng.SuiteRunner.run(SuiteRunner.java:193)
	at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:910)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:879)
	at org.testng.TestNG.run(TestNG.java:787)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:74)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:350)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1021)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="limitLimitLoop()" name="limitLimitLoop" duration-ms="2" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createTestSubjects()" name="createTestSubjects" is-config="true" duration-ms="1" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="createMocks()" name="createMocks" is-config="true" duration-ms="0" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
        <test-method status="PASS" signature="loopDisposePut()" name="loopDisposePut" duration-ms="3" started-at="2010-08-13T20:09:04Z" finished-at="2010-08-13T20:09:04Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
